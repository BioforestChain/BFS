{
  "lock": false,
  "tasks": {
    "init": "deno run -A ./scripts/init.ts",
    "dev": "deno run -A ./scripts/dev.ts",
    "clean": "deno run -A ./scripts/clean.ts",
    "build": "deno run -A ./scripts/build.ts",
    "test": "vitest",
    "plaoc": "deno run -A ./toolkit/scripts/toolkit-plaoc.ts",
    "plaoc:watch": "deno task plaoc --watch",
    "plaoc:hack": "deno run -A ./toolkit/scripts/hack-plaoc-server.ts",
    "plaoc:demo": "node ./npm/@plaoc__cli/esm/plaoc.js serve ./npm/@plaoc__examples/plugin-demo",
    "plaoc:html": "node ./npm/@plaoc__cli/esm/plaoc.js serve ./npm/@plaoc__examples/html-demo",
    "pub": "deno run -A ./scripts/pub.ts",
    "pub:all": "deno run -A ./scripts/pub-all.ts"
  },
  "imports": {
    "@deno/dnt": "jsr:@deno/dnt@^0.41.1",
    "@dweb-browser/core": "./toolkit/dweb-core/index.ts",
    "@dweb-browser/core/": "./toolkit/dweb-core/src/",
    "@dweb-browser/helper": "./toolkit/dweb-helper/index.ts",
    "@dweb-browser/helper/": "./toolkit/dweb-helper/src/",
    "@dweb-browser/js-process": "./toolkit/dweb-js-process-assets/index.ts",
    "@dweb-browser/js-process/": "./toolkit/dweb-js-process-assets/worker/",
    "@dweb-browser/polyfill": "./toolkit/dweb-polyfill/index.ts",
    "@dweb-browser/polyfill/": "./toolkit/dweb-polyfill/src/",
    "@plaoc/cli": "./toolkit/plaoc/cli/plaoc.ts",
    "@plaoc/is-dweb": "./toolkit/plaoc/is-dweb/index.ts",
    "@plaoc/plugins": "./toolkit/plaoc/plugins/index.ts",
    "@plaoc/server": "./toolkit/plaoc/server/index.ts",
    "@std/fs": "jsr:@std/fs@^0.224.0",
    "@std/path": "jsr:@std/path@^0.224.0",
    "@types/web": "npm:@types/web@^0.0.143",
    "canvg": "npm:canvg@^4.0.1",
    "cbor-x": "npm:cbor-x@^1.5.9",
    "deep-object-diff": "npm:deep-object-diff@^1.1.9",
    "is-mobile": "npm:is-mobile@^4.0.0",
    "jszip": "npm:jszip@^3.10.1",
    "mime": "npm:mime@^4.0.3",
    "urlpattern-polyfill": "npm:urlpattern-polyfill@^10.0.0",
    "vitest": "npm:vitest@^1.5.3",
    "webdav-server": "npm:webdav-server@^2.6.2",
    "xmldom": "npm:xmldom@^0.6.0"
  },
  "compilerOptions": {
    "noImplicitOverride": true,
    "experimentalDecorators": true /* Enable experimental support for legacy experimental decorators. */,
    "emitDecoratorMetadata": true /* Emit design-type metadata for decorated declarations in source files. */,
    "importsNotUsedAsValues": "error"
  },
  "exclude": [
    "npm",
    "toolkit/dweb-desk-assets",
    "toolkit/dweb-offscreen-web-canvas-assets",
    "toolkit/plaoc/examples/plugin-demo",
  ]
}